server:
  port: 8000

spring:
  application:
    name: cloud-consumer-order-openfeign
  cloud:
    consul:
      port: 8500
      host: localhost
      discovery:
        service-name: ${spring.application.name}
        prefer-agent-address: true
    openfeign:
      client:
        config:
#          cloud-payment-service: # 个性化配置
#          default:
#            connect-timeout: 5000
#            read-timeout: 5000
          cloud-payment-service:
            connect-timeout: 20000
            read-timeout: 20000
      httpclient:
        hc5:
          enabled: true
      # 请求/响应压缩
      compression:
        request:
          enabled: true
          mime-types: text/xml,application/xml,application/json
          min-request-size: 2048 # 最小触发压缩大小
        response:
          enabled: true
      circuitbreaker:
        enabled: false
#        group:
#          enabled: true
logging:
  level:
    # 完整包名+类名
    com:
      wusw:
        cloud:
          apis:
            PayFeignApi: debug

management:
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  tracing:
    sampling:
      probability: 1.0 # 采样率,默认值0.1(就是10%的链路会被记录下来)

#resilience4j:
#  ratelimiter:
#    configs:
#      default:
#        limit-for-period: 2 # 一次刷新周期内允许最大的请求数
#        limit-refresh-period: 1s # 刷新周期
#        timeout-duration: 1 # 默认等待时间
#    instances:
#      cloud-payment-service:
#        base-config: default

# 基于次数的降级
#resilience4j:
#  timelimiter:
#    configs:
#      default:
#        timeout-duration: 10s # 默认1s 超过1s直接降级 (坑)
#    #  thread-pool-bulkhead: # 线程池
#    #    configs:
#    #      default:
#    #        max-thread-pool-size: 1
#    #        core-thread-pool-size: 1
#    #        queue-capacity: 1
#    #    instances:
#    #      cloud-payment-service:
#    #        base-config: default
#  circuitbreaker: # 降级熔断
#    configs:
#      default: # CircuitBreakerConfig
#        failure-rate-threshold: 50 # 调用失败达到50%后打开断路器
#        sliding-window-type: count_based # 滑动窗口类型
#        sliding-window-size: 6 # 滑动窗口大小 count_based6个请求 time_base6秒
#        minimum-number-of-calls: 6 # 每个滑动窗口的周期
#        automatic-transition-from-open-to-half-open-enabled: true # 开始过度到半开状态
#        wait-duration-in-open-state: 5s # 从开启到半开启需要5s
#        permitted-number-of-calls-in-half-open-state: 2 #半开状态允许通过的最大请求数
#        record-exceptions:
#          - java.lang.Exception
#    instances:
#      cloud-payment-service:
#        base-config: default

# 限流配置
#resilience4j:
#  ratelimiter:
#    configs:
#      default:
#        limit-for-period: 2 # 在一次刷新周期内，允许执行的最大请求数
#        limit-refresh-period: 1s # 限流器每隔limit-refresh-period刷新一次，将允许处理的最大请求数重置为limit-for-period
#        timeout-duration: 1s # 线程等待权限的默认等待时间
#    instances:
#      cloud-payment-service:
#        base-config: default

# 固定线程池舱壁 Bulkhead.Type.THREADPOOL
#resilience4j:
#  timelimiter:
#    configs:
#      default:
#        timeout-duration: 10s # 默认1s 超过1s直接降级 (坑)
#  thread-pool-bulkhead:
#    configs:
#      default:
#        core-thread-pool-size: 1
#        max-thread-pool-size: 1
#        queue-capacity: 1
#    instances:
#      cloud-payment-service:
#        base-config: default

# 信号量舱壁 Bulkhead.Type.SEMAPHORE（没调通）
#resilience4j:
#  bulkhead:
#    configs:
#      default:
#        max-concurrent-calls: 2 # 隔离允许并发线程执行的最大数量
#        max-wait-duration: 1s # 当达到并发调用数量时，新的线程的阻塞时间，我只愿等待1秒，过时不候进舱壁兜底fallback
#    instances:
#      cloud-payment-service:
#        base-config: default
#  timelimiter:
#    configs:
#      default:
#        timeout-duration: 20s # 默认1s 超过1s直接降级 (坑)


# 基于慢调用的降级
#resilience4j:
#  timelimiter:
#    configs:
#      default:
#        timeout-duration: 10s # 默认1s 超过1s直接降级 (坑)
#  circuitbreaker:
#    configs:
#      default:
#        failure-rate-threshold: 50 # 调用失败达到50%后打开断路器
#        slow-call-duration-threshold: 2s # 慢调用时间阈值
#        slow-call-rate-threshold: 30 # 慢调用百分比峰值
#        sliding-window-type: time_based # 滑动窗口类型
#        sliding-window-size: 2 # 滑动窗口大小 count_based6个请求 time_base6秒
#        minimum-number-of-calls: 2 # 每个滑动窗口的周期
#        automatic-transition-from-open-to-half-open-enabled: true # 开始过度到半开状态
#        wait-duration-in-open-state: 5s # 从开启到半开启需要5s
##        permitted-number-of-calls-in-half-open-state: 2 #半开状态允许通过的最大请求数
#        record-exceptions:
#          - java.lang.Exception
#    instances:
#      cloud-payment-service:
#        base-config: default
